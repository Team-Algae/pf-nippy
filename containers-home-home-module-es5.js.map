{"version":3,"sources":["webpack:///src/app/@containers/home/home.page.route.ts","webpack:///src/app/@containers/home/home.module.ts","webpack:///src/app/@components/navigation/navigation.component.ts","webpack:///src/app/@components/navigation/navigation.component.html","webpack:///node_modules/ngx-page-scroll-core/__ivy_ngcc__/fesm2015/ngx-page-scroll-core.js","webpack:///node_modules/ngx-page-scroll/__ivy_ngcc__/fesm2015/ngx-page-scroll.js","webpack:///src/app/@containers/home/home.page.ts","webpack:///src/app/@containers/home/home.page.html","webpack:///src/app/@containers/home/home-routing.module.ts","webpack:///src/app/@components/navigation/navigation.module.ts"],"names":["HOME_ROUTE","path","Home","component","data","title","description","robots","HomeModule","NavigationComponent","toggle","PageScrollInstance","pageScrollOptions","startScrollPosition","interruptListenersAttached","timer","scrollViews","length","document","documentElement","body","parentNode","isInlineScrolling","scrollingView","verticalScrolling","scrollLeft","scrollTop","clientWidth","clientHeight","scrollTargetElement","getScrollTargetElement","undefined","top","NaN","left","getInlineScrollingTargetPosition","getScrollingTargetPosition","scrollOffset","position","reduce","oneAlreadyWorked","startScrollPropertyValue","getScrollPropertyValue","scrollDistance","Math","abs","isSmallMovement","_minScrollDistance","value","scrollFinishListener","emit","interruptReporter","detachInterruptListeners","interruptListener","event","report","interruptEvents","forEach","addEventListener","removeEventListener","scrollTarget","targetSelector","match","getElementById","substr","querySelector","docEl","windowPageYOffset","defaultView","pageYOffset","windowPageXOffset","pageXOffset","clientTop","clientLeft","box","getBoundingClientRect","round","offsetTop","offsetLeft","advancedInlineOffsetCalculation","accumulatedParentsPos","theWindow","ownerDocument","parentFound","parent","parentElement","getComputedStyle","getPropertyValue","NGXPS_CONFIG","ɵ0","t","b","c","d","defaultPageScrollConfig","_interval","_logLevel","namespace","duration","interruptKeys","interruptible","scrollInView","easingLogic","PageScrollService","customConfig","runningInstances","onInterrupted","pageScrollInstance","shouldStop","type","config","indexOf","key","some","contains","target","stopAll","Object","assign","instanceCounter","console","warn","interrupted","index","splice","clearInterval","fireEvent","options","startScrollPositionFound","scrollRange","getScrollClientPropertyValue","scrollPosition","pageScrollOffset","getCurrentOffset","scrollTargetPosition","extractScrollTargetPosition","targetScrollPosition","distanceToScroll","isNaN","log","allReadyAtDestination","executionDuration","speed","tooShortInterval","setScrollPosition","alreadyInView","attachInterruptListeners","startTime","Date","getTime","endTime","setInterval","instance","currentTime","newScrollPosition","stopNow","stopInternal","push","start","create","stoppedSome","i","ɵfac","PageScrollService_Factory","ɵprov","factory","token","providedIn","ctorParameters","decorators","args","ɵ0$1","NgxPageScrollCoreModule","ngModule","providers","provide","useValue","ɵmod","ɵinj","NgxPageScrollCoreModule_Factory","NgxPageScrollDirective","pageScrollService","router","pageScrollAdjustHash","pageScrollFinish","changes","stop","pageScrollTarget","href","fragment","getPageScrollTarget","pageScroll","pageScrollHorizontal","pageScrollInterruptible","pageScrollInView","pageScrollEasing","pageScrollDuration","pageScrollSpeed","navigate","queryParamsHandling","generatePageScrollInstance","pushRouterState","clickEvent","routerLink","urlTree","parseUrl","createUrlTree","isActive","events","pipe","routerEvent","subscribe","setTimeout","scroll","NgxPageScrollDirective_Factory","ɵdir","selectors","hostBindings","NgxPageScrollDirective_HostBindings","rf","ctx","NgxPageScrollDirective_click_HostBindingHandler","$event","handleClick","inputs","outputs","features","propDecorators","selector","host","NgxPageScrollModule","NgxPageScrollModule_Factory","imports","ngJitMode","declarations","exports","HomePage","routes","HomeRoutingModule","forChild","NavigationModule","forRoot"],"mappings":"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","file":"containers-home-home-module-es5.js","sourcesContent":["import { Route } from '@angular/router';\nimport { Path } from '@core/structs';\nimport { HomePage } from './home.page';\n\nexport const HOME_ROUTE: Route = {\n  path: Path.Home,\n  component: HomePage,\n  data: {\n    title: 'Home',\n    description:\n      'Start writing your business logic right away without any concern on architecture matters.',\n    robots: 'index, follow',\n  },\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NavigationModule } from '@app/@components/navigation/navigation.module';\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomePage } from './home.page';\n\n@NgModule({\n  declarations: [HomePage],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    NavigationModule],\n})\nexport class HomeModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'algae-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit {\n\n  toggle = true;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- ref: https://github.com/justalever/tailwind-navbar/blob/master/public/index.html -->\n<header id=\"header\"\n  class=\"flex flex-wrap items-center px-6 py-2 mx-auto font-bold bg-white lg:px-16 lg:py-0 font-montserrat\">\n  <div class=\"flex items-center justify-between flex-1\">\n    <div class=\"flex items-center justify-between flex-1\">\n      <a class=\"text-2xl text-black\" routerLink=\"/\">Nippy</a>\n    </div>\n  </div>\n\n  <div [ngClass]=\"toggle ? '' : 'is-active'\" class=\"hamburger hamburger--elastic lg:hidden\" (click)=\"toggle = !toggle\">\n    <span class=\"hamburger-box\">\n      <span class=\"hamburger-inner\"></span>\n    </span>\n  </div>\n\n  <div [ngClass]=\"toggle ? 'hidden' : ''\" class=\"w-full lg:w-auto lg:flex lg:items-center\" id=\"menu\">\n    <nav>\n      <ul class=\"items-center justify-between pt-4 text-base text-gray-700 lg:flex lg:pt-0\">\n        <li>\n          <a class=\"block px-0 py-3 border-b-2 border-transparent lg:p-4 hover:text-primary-900\" pageScroll\n            href=\"#hello\">ABOUT US</a>\n        </li>\n        <li>\n          <a class=\"block px-0 py-3 border-b-2 border-transparent lg:p-4 hover:text-primary-900\" pageScroll\n            href=\"#hi\">SHOP</a>\n        </li>\n        <li>\n          <a class=\"block px-0 py-3 border-b-2 border-transparent lg:p-4 hover:text-primary-900\" pageScroll\n            href=\"#hello\">PORTFOLIO</a>\n        </li>\n        <li>\n          <a class=\"block px-0 py-3 border-b-2 border-transparent lg:p-4 hover:text-primary-900\" pageScroll\n            href=\"#hello\">BLOG</a>\n        </li>\n        <li>\n          <a class=\"block px-0 py-3 border-b-2 border-transparent lg:p-4 hover:text-primary-900\" pageScroll\n            href=\"#hello\">ELEMENTS</a>\n        </li>\n      </ul>\n    </nav>\n  </div>\n</header>\n","import { InjectionToken, isDevMode, ɵɵdefineInjectable, ɵɵinject, Injectable, Inject, NgModule } from '@angular/core';\n\n/**\n * Represents a scrolling action\n */\nimport * as ɵngcc0 from '@angular/core';\nclass PageScrollInstance {\n    /**\n     * Private constructor, requires the properties assumed to be the bare minimum.\n     * Use the factory methods to create instances:\n     *      {@link PageScrollService#create}\n     */\n    constructor(pageScrollOptions) {\n        /**\n         * These properties will be set/manipulated if the scroll animation starts\n         */\n        /* The initial value of the scrollTop or scrollLeft position when the animation starts */\n        this.startScrollPosition = 0;\n        /* Whether an interrupt listener is attached to the body or not */\n        this.interruptListenersAttached = false;\n        /* References to the timer instance that is used to perform the scroll animation to be\n         able to clear it on animation end*/\n        this.timer = null;\n        if (!pageScrollOptions.scrollViews || pageScrollOptions.scrollViews.length === 0) {\n            pageScrollOptions.scrollViews = [\n                pageScrollOptions.document.documentElement,\n                pageScrollOptions.document.body,\n                pageScrollOptions.document.body.parentNode,\n            ];\n            this.isInlineScrolling = false;\n        }\n        else {\n            this.isInlineScrolling = true;\n        }\n        this.pageScrollOptions = pageScrollOptions;\n    }\n    static getScrollingTargetPosition(pageScrollOptions, scrollTargetElement) {\n        const body = pageScrollOptions.document.body;\n        const docEl = pageScrollOptions.document.documentElement;\n        const windowPageYOffset = pageScrollOptions.document.defaultView &&\n            pageScrollOptions.document.defaultView.pageYOffset || undefined;\n        const windowPageXOffset = pageScrollOptions.document.defaultView &&\n            pageScrollOptions.document.defaultView.pageXOffset || undefined;\n        const scrollTop = windowPageYOffset || docEl.scrollTop || body.scrollTop;\n        const scrollLeft = windowPageXOffset || docEl.scrollLeft || body.scrollLeft;\n        const clientTop = docEl.clientTop || body.clientTop || 0;\n        const clientLeft = docEl.clientLeft || body.clientLeft || 0;\n        if (scrollTargetElement === undefined || scrollTargetElement === null) {\n            // No element found, so return the current position to not cause any change in scroll position\n            return { top: scrollTop, left: scrollLeft };\n        }\n        const box = scrollTargetElement.getBoundingClientRect();\n        const top = box.top + scrollTop - clientTop;\n        const left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    }\n    static getInlineScrollingTargetPosition(pageScrollOptions, scrollTargetElement) {\n        const position = { top: scrollTargetElement.offsetTop, left: scrollTargetElement.offsetLeft };\n        if (pageScrollOptions.advancedInlineOffsetCalculation && pageScrollOptions.scrollViews.length === 1) {\n            const accumulatedParentsPos = { top: 0, left: 0 };\n            // not named window to make sure we're not getting the global window variable by accident\n            const theWindow = scrollTargetElement.ownerDocument.defaultView;\n            let parentFound = false;\n            // Start parent is the immediate parent\n            let parent = scrollTargetElement.parentElement;\n            // Iterate upwards all parents\n            while (!parentFound && parent !== undefined && parent !== null) {\n                if (theWindow.getComputedStyle(parent).getPropertyValue('position') === 'relative') {\n                    accumulatedParentsPos.top += parent.offsetTop;\n                    accumulatedParentsPos.left += parent.offsetLeft;\n                }\n                // Next iteration\n                parent = parent.parentElement;\n                parentFound = parent === pageScrollOptions.scrollViews[0];\n            }\n            if (parentFound) {\n                // Only use the results if we found the parent, otherwise we accumulated too much anyway\n                position.top += accumulatedParentsPos.top;\n                position.left += accumulatedParentsPos.left;\n            }\n            else {\n                /* TODO Uncomment\n                if (PageScrollConfig._logLevel >= 2 || (PageScrollConfig._logLevel >= 1 && isDevMode())) {\n                  console.warn('Unable to find nested scrolling targets parent!');\n                }*/\n            }\n        }\n        return position;\n    }\n    getScrollPropertyValue(scrollingView) {\n        if (!this.pageScrollOptions.verticalScrolling) {\n            return scrollingView.scrollLeft;\n        }\n        return scrollingView.scrollTop;\n    }\n    getScrollClientPropertyValue(scrollingView) {\n        if (!this.pageScrollOptions.verticalScrolling) {\n            return scrollingView.clientWidth;\n        }\n        return scrollingView.clientHeight;\n    }\n    /**\n     * Extract the exact location of the scrollTarget element.\n     *\n     * Extract the scrollTarget HTMLElement from the given PageScrollTarget object. The latter one may be\n     * a string like \"#heading2\", then this method returns the corresponding DOM element for that id.\n     *\n     */\n    extractScrollTargetPosition() {\n        const scrollTargetElement = this.getScrollTargetElement();\n        if (scrollTargetElement === null || scrollTargetElement === undefined) {\n            // Scroll target not found\n            return { top: NaN, left: NaN };\n        }\n        if (this.isInlineScrolling) {\n            return PageScrollInstance.getInlineScrollingTargetPosition(this.pageScrollOptions, scrollTargetElement);\n        }\n        return PageScrollInstance.getScrollingTargetPosition(this.pageScrollOptions, scrollTargetElement);\n    }\n    /**\n     * Get the top offset of the scroll animation.\n     * This automatically takes the offset location of the scrolling container/scrolling view\n     * into account (for nested/inline scrolling).\n     */\n    getCurrentOffset() {\n        return this.pageScrollOptions.scrollOffset;\n    }\n    /**\n     * Sets the \"scrollTop\" or \"scrollLeft\" property for all scrollViews to the provided value\n     * @return true if at least for one ScrollTopSource the scrollTop/scrollLeft value could be set and it kept the new value.\n     *          false if it failed for all ScrollViews, meaning that we should stop the animation\n     *          (probably because we're at the end of the scrolling region)\n     */\n    setScrollPosition(position) {\n        // Set the new scrollTop/scrollLeft to all scrollViews elements\n        return this.pageScrollOptions.scrollViews.reduce((oneAlreadyWorked, scrollingView) => {\n            const startScrollPropertyValue = this.getScrollPropertyValue(scrollingView);\n            if (scrollingView && startScrollPropertyValue !== undefined && startScrollPropertyValue !== null) {\n                const scrollDistance = Math.abs(startScrollPropertyValue - position);\n                // The movement we need to perform is less than 2px\n                // This we consider a small movement which some browser may not perform when\n                // changing the scrollTop/scrollLeft property\n                // Thus in this cases we do not stop the scroll animation, although setting the\n                // scrollTop/scrollLeft value \"fails\"\n                const isSmallMovement = scrollDistance < this.pageScrollOptions._minScrollDistance;\n                if (!this.pageScrollOptions.verticalScrolling) {\n                    scrollingView.scrollLeft = position;\n                }\n                else {\n                    scrollingView.scrollTop = position;\n                }\n                // Return true if setting the new scrollTop/scrollLeft value worked\n                // We consider that it worked if the new scrollTop/scrollLeft value is closer to the\n                // desired scrollTop/scrollLeft than before (it might not be exactly the value we\n                // set due to dpi or rounding irregularities)\n                if (isSmallMovement || scrollDistance > Math.abs(this.getScrollPropertyValue(scrollingView) - position)) {\n                    return true;\n                }\n            }\n            return oneAlreadyWorked;\n        }, false);\n    }\n    /**\n     * Trigger firing a animation finish event\n     * @param value Whether the animation finished at the target (true) or got interrupted (false)\n     */\n    fireEvent(value) {\n        if (this.pageScrollOptions.scrollFinishListener) {\n            this.pageScrollOptions.scrollFinishListener.emit(value);\n        }\n    }\n    /**\n     * Attach the interrupt listeners to the PageScrollInstance body. The given interruptReporter\n     * will be called if any of the attached events is fired.\n     *\n     * Possibly attached interruptListeners are automatically removed from the body before the new one will be attached.\n     */\n    attachInterruptListeners(interruptReporter) {\n        if (this.interruptListenersAttached) {\n            // Detach possibly existing listeners first\n            this.detachInterruptListeners();\n        }\n        this.interruptListener = (event) => {\n            interruptReporter.report(event, this);\n        };\n        this.pageScrollOptions.interruptEvents.forEach((event) => this.pageScrollOptions.document.body.addEventListener(event, this.interruptListener));\n        this.interruptListenersAttached = true;\n    }\n    /**\n     * Remove event listeners from the body and stop listening for events that might be treated as \"animation\n     * interrupt\" events.\n     */\n    detachInterruptListeners() {\n        this.pageScrollOptions.interruptEvents.forEach((event) => this.pageScrollOptions.document.body.removeEventListener(event, this.interruptListener));\n        this.interruptListenersAttached = false;\n    }\n    getScrollTargetElement() {\n        if (typeof this.pageScrollOptions.scrollTarget === 'string') {\n            const targetSelector = this.pageScrollOptions.scrollTarget;\n            if (targetSelector.match(/^#[^\\s]+$/g) !== null) {\n                // It's an id selector and a valid id, as it does not contain any white space characters\n                return this.pageScrollOptions.document.getElementById(targetSelector.substr(1));\n            }\n            return this.pageScrollOptions.document.querySelector(targetSelector);\n        }\n        return this.pageScrollOptions.scrollTarget;\n    }\n}\n\nconst NGXPS_CONFIG = new InjectionToken('ngxps_config');\nconst ɵ0 = (t, b, c, d) => {\n    // Linear easing\n    return c * t / d + b;\n};\nconst defaultPageScrollConfig = {\n    _interval: 10,\n    _minScrollDistance: 2,\n    _logLevel: 1,\n    namespace: 'default',\n    verticalScrolling: true,\n    duration: 1250,\n    scrollOffset: 0,\n    advancedInlineOffsetCalculation: false,\n    interruptEvents: ['mousedown', 'wheel', 'DOMMouseScroll', 'mousewheel', 'keyup', 'touchmove'],\n    interruptKeys: [' ', 'Escape', 'Tab', 'Enter', 'PageUp', 'PageDown', 'Home', 'End', 'ArrowUp', 'ArrowRight', 'ArrowLeft', 'ArrowDown'],\n    interruptible: true,\n    scrollInView: true,\n    easingLogic: ɵ0,\n};\n\nclass PageScrollService {\n    constructor(customConfig) {\n        this.runningInstances = [];\n        this.onInterrupted = {\n            report: (event, pageScrollInstance) => {\n                if (!pageScrollInstance.pageScrollOptions.interruptible) {\n                    // Non-interruptible anyway, so do not stop anything\n                    return;\n                }\n                let shouldStop = true;\n                if (event.type === 'keyup') {\n                    // Only stop if specific keys have been pressed, for all others don't stop anything\n                    if (this.config.interruptKeys.indexOf(event.key) === -1) {\n                        // The pressed key is not in the list of interrupting keys\n                        shouldStop = false;\n                    }\n                }\n                else if (event.type === 'mousedown') {\n                    // For mousedown events we only stop the scroll animation of the mouse has\n                    // been clicked inside the scrolling container\n                    if (!pageScrollInstance.pageScrollOptions.scrollViews.some(scrollingView => scrollingView.contains(event.target))) {\n                        // Mouse clicked an element which is not inside any of the the scrolling containers\n                        shouldStop = false;\n                    }\n                }\n                if (shouldStop) {\n                    this.stopAll(pageScrollInstance.pageScrollOptions.namespace);\n                }\n            },\n        };\n        this.config = Object.assign(Object.assign({}, defaultPageScrollConfig), customConfig);\n        if (PageScrollService.instanceCounter > 0 &&\n            (this.config._logLevel >= 2 || (this.config._logLevel >= 1 && isDevMode()))) {\n            console.warn('An instance of PageScrollService already exists, usually ' +\n                'including one provider should be enough, so double check.');\n        }\n        PageScrollService.instanceCounter++;\n    }\n    stopInternal(interrupted, pageScrollInstance) {\n        const index = this.runningInstances.indexOf(pageScrollInstance);\n        if (index >= 0) {\n            this.runningInstances.splice(index, 1);\n        }\n        if (pageScrollInstance.interruptListenersAttached) {\n            pageScrollInstance.detachInterruptListeners();\n        }\n        if (pageScrollInstance.timer) {\n            // Clear/Stop the timer\n            clearInterval(pageScrollInstance.timer);\n            // Clear the reference to this timer\n            pageScrollInstance.timer = undefined;\n            pageScrollInstance.fireEvent(!interrupted);\n            return true;\n        }\n        return false;\n    }\n    create(options) {\n        return new PageScrollInstance(Object.assign(Object.assign({}, this.config), options));\n    }\n    /**\n     * Start a scroll animation. All properties of the animation are stored in the given {@link PageScrollInstance} object.\n     *\n     * This is the core functionality of the whole library.\n     */\n    // tslint:disable-next-line:cyclomatic-complexity\n    start(pageScrollInstance) {\n        // Merge the default options in the pageScrollInstance options\n        pageScrollInstance.pageScrollOptions = Object.assign(Object.assign({}, this.config), pageScrollInstance.pageScrollOptions);\n        // Stop all possibly running scroll animations in the same namespace\n        this.stopAll(pageScrollInstance.pageScrollOptions.namespace);\n        if (pageScrollInstance.pageScrollOptions.scrollViews === null || pageScrollInstance.pageScrollOptions.scrollViews.length === 0) {\n            // No scrollViews specified, thus we can't animate anything\n            if (this.config._logLevel >= 2 || (this.config._logLevel >= 1 && isDevMode())) {\n                console.warn('No scrollViews specified, thus ngx-page-scroll does not know which DOM elements to scroll');\n            }\n            return;\n        }\n        let startScrollPositionFound = false;\n        let scrollRange = pageScrollInstance.getScrollClientPropertyValue(pageScrollInstance.pageScrollOptions.scrollViews[0]);\n        // Reset start scroll position to 0. If any of the scrollViews has a different one, it will be extracted next\n        pageScrollInstance.startScrollPosition = 0;\n        // Get the start scroll position from the scrollViews (e.g. if the user already scrolled down the content)\n        pageScrollInstance.pageScrollOptions.scrollViews.forEach(scrollingView => {\n            if (scrollingView === undefined || scrollingView === null) {\n                return;\n            }\n            // Get the scrollTop or scrollLeft value of the first scrollingView that returns a value for its \"scrollTop\"\n            // or \"scrollLeft\" property that is not undefined and unequal to 0\n            const scrollPosition = pageScrollInstance.getScrollPropertyValue(scrollingView);\n            if (!startScrollPositionFound && scrollPosition) {\n                // We found a scrollingView that does not have scrollTop or scrollLeft 0\n                // Return the scroll position value, as this will be our startScrollPosition\n                pageScrollInstance.startScrollPosition = scrollPosition;\n                startScrollPositionFound = true;\n                // Remember te scrollRange of this scrollingView\n                scrollRange = pageScrollInstance.getScrollClientPropertyValue(scrollingView);\n            }\n        });\n        const pageScrollOffset = pageScrollInstance.getCurrentOffset();\n        // Calculate the target position that the scroll animation should go to\n        const scrollTargetPosition = pageScrollInstance.extractScrollTargetPosition();\n        pageScrollInstance.targetScrollPosition = Math.round((pageScrollInstance.pageScrollOptions.verticalScrolling ? scrollTargetPosition.top : scrollTargetPosition.left) - pageScrollOffset);\n        // Calculate the distance we need to go in total\n        pageScrollInstance.distanceToScroll = pageScrollInstance.targetScrollPosition - pageScrollInstance.startScrollPosition;\n        if (isNaN(pageScrollInstance.distanceToScroll)) {\n            // We weren't able to find the target position, maybe the element does not exist?\n            if (this.config._logLevel >= 2 || (this.config._logLevel >= 1 && isDevMode())) {\n                console.log('Scrolling not possible, as we can\\'t find the specified target');\n            }\n            pageScrollInstance.fireEvent(false);\n            return;\n        }\n        // We're at the final destination already\n        // OR we need to scroll down but are already at the end\n        // OR we need to scroll up but are at the top already\n        const allReadyAtDestination = Math.abs(pageScrollInstance.distanceToScroll) < pageScrollInstance.pageScrollOptions._minScrollDistance;\n        // Check how long we need to scroll if a speed option is given\n        // Default executionDuration is the specified duration\n        pageScrollInstance.executionDuration = pageScrollInstance.pageScrollOptions.duration;\n        // Maybe we need to pay attention to the speed option?\n        if ((pageScrollInstance.pageScrollOptions.speed !== undefined && pageScrollInstance.pageScrollOptions.speed !== null) &&\n            (pageScrollInstance.pageScrollOptions.duration === undefined || pageScrollInstance.pageScrollOptions.duration === null)) {\n            // Speed option is set and no duration => calculate duration based on speed and scroll distance\n            pageScrollInstance.executionDuration =\n                Math.abs(pageScrollInstance.distanceToScroll) / pageScrollInstance.pageScrollOptions.speed * 1000;\n        }\n        // We should go there directly, as our \"animation\" would have one big step\n        // only anyway and this way we save the interval stuff\n        const tooShortInterval = pageScrollInstance.executionDuration <= pageScrollInstance.pageScrollOptions._interval;\n        if (allReadyAtDestination || tooShortInterval) {\n            if (this.config._logLevel >= 2 || (this.config._logLevel >= 1 && isDevMode())) {\n                if (allReadyAtDestination) {\n                    console.log('Scrolling not possible, as we can\\'t get any closer to the destination');\n                }\n                else {\n                    console.log('Scroll duration shorter that interval length, jumping to target');\n                }\n            }\n            pageScrollInstance.setScrollPosition(pageScrollInstance.targetScrollPosition);\n            pageScrollInstance.fireEvent(true);\n            return;\n        }\n        if (!pageScrollInstance.pageScrollOptions.scrollInView) {\n            const alreadyInView = pageScrollInstance.targetScrollPosition > pageScrollInstance.startScrollPosition &&\n                pageScrollInstance.targetScrollPosition <= pageScrollInstance.startScrollPosition + scrollRange;\n            if (alreadyInView) {\n                if (this.config._logLevel >= 2 || (this.config._logLevel >= 1 && isDevMode())) {\n                    console.log('Not scrolling, as target already in view');\n                }\n                pageScrollInstance.fireEvent(true);\n                return;\n            }\n        }\n        // Register the interrupt listeners if we want an interruptible scroll animation\n        if (pageScrollInstance.pageScrollOptions.interruptible) {\n            pageScrollInstance.attachInterruptListeners(this.onInterrupted);\n        }\n        // Let's get started, get the start time...\n        pageScrollInstance.startTime = new Date().getTime();\n        // .. and calculate the end time (when we need to finish at last)\n        pageScrollInstance.endTime = pageScrollInstance.startTime + pageScrollInstance.executionDuration;\n        pageScrollInstance.timer = setInterval((instance) => {\n            // Take the current time\n            const currentTime = new Date().getTime();\n            // Determine the new scroll position\n            let newScrollPosition;\n            let stopNow = false;\n            if (instance.endTime <= currentTime) {\n                // We're over the time already, so go the targetScrollPosition (aka destination)\n                newScrollPosition = instance.targetScrollPosition;\n                stopNow = true;\n            }\n            else {\n                // Calculate the scroll position based on the current time using the easing function\n                newScrollPosition = Math.round(instance.pageScrollOptions.easingLogic(currentTime - instance.startTime, instance.startScrollPosition, instance.distanceToScroll, instance.executionDuration));\n            }\n            if (this.config._logLevel >= 5 && isDevMode()) {\n                console.warn('Scroll Position: ' + newScrollPosition);\n            }\n            // Set the new scrollPosition to all scrollViews elements\n            if (!instance.setScrollPosition(newScrollPosition)) {\n                // Setting the new scrollTop/scrollLeft value failed for all ScrollViews\n                // early stop the scroll animation to save resources\n                stopNow = true;\n            }\n            // At the end do the internal stop maintenance and fire the pageScrollFinish event\n            // (otherwise the event might arrive at \"too early\")\n            if (stopNow) {\n                this.stopInternal(false, instance);\n            }\n        }, this.config._interval, pageScrollInstance);\n        // Register the instance as running one\n        this.runningInstances.push(pageScrollInstance);\n    }\n    scroll(options) {\n        this.start(this.create(options));\n    }\n    /**\n     * Stop all running scroll animations. Optionally limit to stop only the ones of specific namespace.\n     */\n    stopAll(namespace) {\n        if (this.runningInstances.length > 0) {\n            let stoppedSome = false;\n            for (let i = 0; i < this.runningInstances.length; ++i) {\n                const pageScrollInstance = this.runningInstances[i];\n                if (!namespace || pageScrollInstance.pageScrollOptions.namespace === namespace) {\n                    stoppedSome = true;\n                    this.stopInternal(true, pageScrollInstance);\n                    // Decrease the counter, as we removed an item from the array we iterate over\n                    i--;\n                }\n            }\n            return stoppedSome;\n        }\n        return false;\n    }\n    stop(pageScrollInstance) {\n        return this.stopInternal(true, pageScrollInstance);\n    }\n}\nPageScrollService.ɵfac = function PageScrollService_Factory(t) { return new (t || PageScrollService)(ɵngcc0.ɵɵinject(NGXPS_CONFIG)); };\nPageScrollService.instanceCounter = 0;\nPageScrollService.ɵprov = ɵɵdefineInjectable({ factory: function PageScrollService_Factory() { return new PageScrollService(ɵɵinject(NGXPS_CONFIG)); }, token: PageScrollService, providedIn: \"root\" });\nPageScrollService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [NGXPS_CONFIG,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PageScrollService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [NGXPS_CONFIG]\n            }] }]; }, null); })();\n\nconst ɵ0$1 = {};\nclass NgxPageScrollCoreModule {\n    static forRoot(config) {\n        return {\n            ngModule: NgxPageScrollCoreModule,\n            providers: [PageScrollService, { provide: NGXPS_CONFIG, useValue: config }],\n        };\n    }\n}\nNgxPageScrollCoreModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxPageScrollCoreModule });\nNgxPageScrollCoreModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxPageScrollCoreModule_Factory(t) { return new (t || NgxPageScrollCoreModule)(); }, providers: [\n        PageScrollService,\n        { provide: NGXPS_CONFIG, useValue: ɵ0$1 },\n    ] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxPageScrollCoreModule, [{\n        type: NgModule,\n        args: [{\n                providers: [\n                    PageScrollService,\n                    { provide: NGXPS_CONFIG, useValue: ɵ0$1 },\n                ]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of ngx-page-scroll-core\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NGXPS_CONFIG, NgxPageScrollCoreModule, PageScrollInstance, PageScrollService, defaultPageScrollConfig };\n\n//# sourceMappingURL=ngx-page-scroll-core.js.map","import { EventEmitter, Directive, Optional, Inject, Input, Output, NgModule } from '@angular/core';\nimport { PageScrollService, NgxPageScrollCoreModule } from 'ngx-page-scroll-core';\nimport { NavigationEnd, NavigationError, NavigationCancel, Router } from '@angular/router';\nimport { DOCUMENT } from '@angular/common';\nimport { filter, take } from 'rxjs/operators';\n\n/* tslint:disable:no-host-metadata-property directive-selector */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'ngx-page-scroll-core';\nimport * as ɵngcc2 from '@angular/router';\nclass NgxPageScrollDirective {\n    constructor(pageScrollService, router, document) {\n        this.pageScrollService = pageScrollService;\n        this.router = router;\n        this.pageScrollAdjustHash = false;\n        this.pageScrollFinish = new EventEmitter();\n        this.document = document;\n    }\n    ngOnChanges(changes) {\n        // Some inputs changed, reset the pageScrollInstance\n        this.pageScrollInstance = undefined;\n    }\n    ngOnDestroy() {\n        if (this.pageScrollInstance) {\n            this.pageScrollService.stop(this.pageScrollInstance);\n        }\n    }\n    getPageScrollTarget() {\n        return this.pageScrollTarget || this.href || (this.fragment ? '#' + this.fragment : '');\n    }\n    generatePageScrollInstance() {\n        if (this.pageScrollInstance === undefined || this.pageScrollInstance === null) {\n            const options = {\n                document: this.document,\n                scrollTarget: this.getPageScrollTarget(),\n            };\n            if (this.pageScroll) {\n                options.namespace = this.pageScroll;\n            }\n            if (this.pageScrollHorizontal !== undefined && this.pageScrollHorizontal !== null) {\n                options.verticalScrolling = !this.pageScrollHorizontal;\n            }\n            if (this.pageScrollOffset !== undefined && this.pageScrollOffset !== null) {\n                options.scrollOffset = this.pageScrollOffset;\n            }\n            if (this.pageScrollInterruptible !== undefined && this.pageScrollInterruptible !== null) {\n                options.interruptible = this.pageScrollInterruptible;\n            }\n            if (this.pageScrollInView !== undefined && this.pageScrollInView !== null) {\n                options.scrollInView = this.pageScrollInView;\n            }\n            if (this.pageScrollEasing) {\n                options.easingLogic = this.pageScrollEasing;\n            }\n            if (this.pageScrollDuration !== undefined && this.pageScrollDuration !== null) {\n                options.duration = this.pageScrollDuration;\n            }\n            if (this.pageScrollSpeed !== undefined && this.pageScrollSpeed !== null) {\n                options.speed = this.pageScrollSpeed;\n            }\n            if (this.pageScrollFinish) {\n                options.scrollFinishListener = this.pageScrollFinish;\n            }\n            this.pageScrollInstance = this.pageScrollService.create(options);\n        }\n        return this.pageScrollInstance;\n    }\n    pushRouterState() {\n        if (this.pageScrollAdjustHash && typeof this.pageScrollInstance.pageScrollOptions.scrollTarget === 'string'\n            && this.pageScrollInstance.pageScrollOptions.scrollTarget.substr(0, 1) === '#') {\n            // \"Navigate\" to the current route again and this time set the fragment/hash\n            this.router.navigate([], {\n                fragment: this.pageScrollInstance.pageScrollOptions.scrollTarget.substr(1),\n                queryParamsHandling: 'preserve',\n            });\n        }\n    }\n    scroll() {\n        const pageScrollInstance = this.generatePageScrollInstance();\n        this.pushRouterState();\n        this.pageScrollService.start(pageScrollInstance);\n    }\n    handleClick(clickEvent) {\n        if (this.routerLink && this.router !== null && this.router !== undefined) {\n            let urlTree;\n            if (typeof this.routerLink === 'string') {\n                urlTree = this.router.parseUrl(this.routerLink);\n            }\n            else {\n                urlTree = this.router.createUrlTree(this.routerLink);\n            }\n            if (!this.router.isActive(urlTree, true)) {\n                // We need to navigate their first.\n                // Navigation is handled by the routerLink directive so we only need to listen for route change\n                this.router.events.pipe(filter(routerEvent => {\n                    // We're only interested in successful navigations or when the navigation fails\n                    return routerEvent instanceof NavigationEnd || routerEvent instanceof NavigationError\n                        || routerEvent instanceof NavigationCancel;\n                }), \n                // Consume only one event, automatically \"unsubscribing\" from the event stream afterwards\n                take(1)).subscribe((routerEvent) => {\n                    if (routerEvent instanceof NavigationEnd) {\n                        // use a timeout to start scrolling as soon as the stack is cleared\n                        setTimeout(() => {\n                            this.scroll();\n                        }, 0);\n                    }\n                });\n                return false; // to preventDefault()\n            }\n        }\n        this.scroll();\n        return false; // to preventDefault()\n    }\n}\nNgxPageScrollDirective.ɵfac = function NgxPageScrollDirective_Factory(t) { return new (t || NgxPageScrollDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.PageScrollService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Router, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nNgxPageScrollDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgxPageScrollDirective, selectors: [[\"\", \"pageScroll\", \"\"]], hostBindings: function NgxPageScrollDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NgxPageScrollDirective_click_HostBindingHandler($event) { return ctx.handleClick($event); });\n    } }, inputs: { pageScrollAdjustHash: \"pageScrollAdjustHash\", routerLink: \"routerLink\", href: \"href\", fragment: \"fragment\", pageScrollTarget: \"pageScrollTarget\", pageScrollHorizontal: \"pageScrollHorizontal\", pageScrollOffset: \"pageScrollOffset\", pageScrollDuration: \"pageScrollDuration\", pageScrollSpeed: \"pageScrollSpeed\", pageScrollEasing: \"pageScrollEasing\", pageScrollInterruptible: \"pageScrollInterruptible\", pageScrollInView: \"pageScrollInView\", pageScroll: \"pageScroll\" }, outputs: { pageScrollFinish: \"pageScrollFinish\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nNgxPageScrollDirective.ctorParameters = () => [\n    { type: PageScrollService },\n    { type: Router, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nNgxPageScrollDirective.propDecorators = {\n    routerLink: [{ type: Input }],\n    href: [{ type: Input }],\n    fragment: [{ type: Input }],\n    pageScrollTarget: [{ type: Input }],\n    pageScrollHorizontal: [{ type: Input }],\n    pageScrollOffset: [{ type: Input }],\n    pageScrollDuration: [{ type: Input }],\n    pageScrollSpeed: [{ type: Input }],\n    pageScrollEasing: [{ type: Input }],\n    pageScrollInterruptible: [{ type: Input }],\n    pageScrollInView: [{ type: Input }],\n    pageScrollAdjustHash: [{ type: Input }],\n    pageScroll: [{ type: Input }],\n    pageScrollFinish: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxPageScrollDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[pageScroll]',\n                host: {\n                    '(click)': 'handleClick($event)'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.PageScrollService }, { type: ɵngcc2.Router, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { pageScrollAdjustHash: [{\n            type: Input\n        }], pageScrollFinish: [{\n            type: Output\n        }], routerLink: [{\n            type: Input\n        }], href: [{\n            type: Input\n        }], fragment: [{\n            type: Input\n        }], pageScrollTarget: [{\n            type: Input\n        }], pageScrollHorizontal: [{\n            type: Input\n        }], pageScrollOffset: [{\n            type: Input\n        }], pageScrollDuration: [{\n            type: Input\n        }], pageScrollSpeed: [{\n            type: Input\n        }], pageScrollEasing: [{\n            type: Input\n        }], pageScrollInterruptible: [{\n            type: Input\n        }], pageScrollInView: [{\n            type: Input\n        }], pageScroll: [{\n            type: Input\n        }] }); })();\n\nclass NgxPageScrollModule {\n}\nNgxPageScrollModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxPageScrollModule });\nNgxPageScrollModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxPageScrollModule_Factory(t) { return new (t || NgxPageScrollModule)(); }, imports: [[\n            NgxPageScrollCoreModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxPageScrollModule, { declarations: function () { return [NgxPageScrollDirective]; }, imports: function () { return [NgxPageScrollCoreModule]; }, exports: function () { return [NgxPageScrollDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxPageScrollModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    NgxPageScrollDirective,\n                ],\n                imports: [\n                    NgxPageScrollCoreModule,\n                ],\n                exports: [\n                    NgxPageScrollDirective,\n                ]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of ngx-page-scroll\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxPageScrollDirective, NgxPageScrollModule };\n\n//# sourceMappingURL=ngx-page-scroll.js.map","import { Component, OnInit } from '@angular/core';\nimport { Path } from '@core/structs';\n\n@Component({\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n})\nexport class HomePage implements OnInit {\n  path = Path;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"min-w-full light\">\n  <algae-navigation></algae-navigation>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HOME_ROUTE } from './home.page.route';\n\nconst routes: Routes = [HOME_ROUTE];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomeRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NgxPageScrollModule } from 'ngx-page-scroll';\nimport { NgxPageScrollCoreModule } from 'ngx-page-scroll-core';\nimport { NavigationComponent } from './navigation.component';\n\n\n\n@NgModule({\n  declarations: [NavigationComponent],\n  imports: [\n    CommonModule,\n    NgxPageScrollCoreModule.forRoot({ duration: 800 }),\n    NgxPageScrollModule\n  ],\n  exports: [NavigationComponent]\n})\nexport class NavigationModule { }\n"]}